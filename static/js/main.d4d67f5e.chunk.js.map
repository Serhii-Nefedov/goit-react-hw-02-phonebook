{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","className","styles","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","type","onChange","placeholder","TaskEditor_button","Component","Filter","onChangeFilter","filter","filter_label","filter__input","ContactList","contacts","onRemoveContact","TaskList","map","contact","TaskList_item","TaskList_button","onClick","id","App","shortid","generate","addContact","task","cont","includes","alert","length","test","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4d67f5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__9DUgv\",\"filter__input\":\"Filter_filter__input__3I7ok\",\"filter_label\":\"Filter_filter_label__1THiH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__1GTy8\",\"TaskList_item\":\"ContactList_TaskList_item__33I5k\",\"completed\":\"ContactList_completed__24GUY\",\"TaskList_text\":\"ContactList_TaskList_text__IJYF0\",\"TaskList_actions\":\"ContactList_TaskList_actions__24cUA\",\"TaskList_button\":\"ContactList_TaskList_button__agNR5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__-ifRW\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__2CgcN\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__CWqH-\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__18B9W\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__21Ze5\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\r\n        <label className={styles.TaskEditor_label}>\r\n          Name\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Ivan Ivanov\"\r\n          />\r\n        </label>\r\n        <label className={styles.TaskEditor_label}>\r\n          Number\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"111-11-11\"\r\n          />\r\n        </label>\r\n        <button className={styles.TaskEditor_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div className={styles.filter}>\r\n      \r\n      <label className={styles.filter_label}>\r\n        Find contacts by name\r\n      <input\r\n        className={styles.filter__input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={styles.TaskList}>\r\n    {contacts.map((contact) => (\r\n      <li className = {styles.TaskList_item}key={contact.id}>\r\n        {contact.name + \": \" + contact.number}\r\n        {\r\n          <button\r\n            className={styles.TaskList_button}\r\n            type=\"button\"\r\n            name=\"delte\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n  })),\r\n}\r\n\r\nexport default ContactList;","import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: shortid.generate(), name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: shortid.generate(), name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: shortid.generate(), name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: shortid.generate(), name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((cont) => cont.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(task.number)) {\n      alert(\"Enter the correct number phone!\");\n    } else {\n      const contact = {\n        ...task,\n        id: shortid.generate(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {visibleContacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}